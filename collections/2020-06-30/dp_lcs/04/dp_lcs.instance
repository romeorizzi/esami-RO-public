---
name: lcs
title: Massima sottosequenza comune
tags:
- programmazione dinamica
- sottoproblemi e ricorrenze
- algoritmi classici su stringhe

instance:
  s: "GTGAATTTGCATTGAAT"
  t: "CCGTAGATTGGCGTGGC"

tasks:
- 1:
    tot_points: 8
    ver_points: 1
    task_codename: opt_lcs_s_t
    request: 'Fornire una massima sottosequenza comune tra le due stringhe:<br/>$s$ = {s}<br/>$t$ = {t}.'
    request_txt: 'Fornire una massima sottosequenza comune tra le due stringhe s = {s}  e t = {t}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (una stringa, per esempio "TATATA")\nanswer{num_of_question}=""'
    verif: 'display(Markdown(verifLCS(s, t, answer{num_of_question}, pt_green={task["ver_points"]}, pt_red={task["tot_points"]}, index_pt={num_of_question - 1})))'
     
- 2:
    tot_points: 8
    ver_points: 1
    task_codename: opt_lcs_beginning
    beginning: C
    request: 'Fornire una stringa di lunghezza massima che <b>inizi con la lettera </b> __{task["beginning"]}__ e sia sottosequenza comune tra: <br/>$s$ = {s}<br/>$t$ = {t}.'
    request_txt: 'Fornire una stringa di lunghezza massima che inizi con la lettera __{task["beginning"]}__ e sia sottosequenza comune tra s = {s}  e t = {t}'
    init_answ_cell_msg: '#Inserisci la tua risposta (una stringa, per esempio "TATATA")\nanswer{num_of_question}=""'
    verif: 'display(Markdown(verifLCS(s, t, answer{num_of_question}, pt_green={task["ver_points"]}, pt_red={task["tot_points"]}, index_pt={num_of_question - 1}, start="{task["beginning"]}")))'

- 3:
    tot_points: 8
    ver_points: 1
    task_codename: opt_lcs_beginning
    beginning: G
    request: 'Fornire una stringa di lunghezza massima che <b>inizi con la lettera </b> __{task["beginning"]}__ e sia sottosequenza comune tra: <br/>$s$ = {s}<br/>$t$ = {t}.'
    request_txt: 'Fornire una stringa di lunghezza massima che inizi con la lettera __{task["beginning"]}__ e sia sottosequenza comune tra s = {s}  e t = {t}'
    init_answ_cell_msg: '#Inserisci la tua risposta (una stringa, per esempio "TATATA")\nanswer{num_of_question}=""'
    verif: 'display(Markdown(verifLCS(s, t, answer{num_of_question}, pt_green={task["ver_points"]}, pt_red={task["tot_points"]}, index_pt={num_of_question - 1}, start="{task["beginning"]}")))'

- 4:
    tot_points: 8
    ver_points: 1
    task_codename: opt_lcs_t_suffix
    len_t_suffix:  6
    request: 'Fornire una massima sottosequenza comune tra $s$ = {s} e <br/><b>il suffisso </b> $t\''$ = {t[len(t)-task["len_t_suffix"]:]} di $t$.'
    request_txt: 'Fornire una massima sottosequenza comune tra s = {s} e il suffisso t\'' = {t[len(t)-task["len_t_suffix"]:]} di t.'
    init_answ_cell_msg: '#Inserisci la tua risposta (una stringa, per esempio "TATATA")\nanswer{num_of_question}=""'
    verif: 'display(Markdown(verifLCS("{s}", "{t[len(t)-task["len_t_suffix"]:]}", answer{num_of_question}, pt_green={task["ver_points"]}, pt_red={task["tot_points"]}, index_pt={num_of_question - 1})))'

- 5:
    tot_points: 8
    ver_points: 1
    task_codename: opt_lcs_s_prefix
    len_s_prefix:  12
    request: 'Fornire una massima sottosequenza comune tra: <br/><b>il prefisso</b>  $s\''$ = {s[:task["len_s_prefix"]]} di $s$ e <br/>$t$ = {t}.'
    request_txt: 'Fornire una massima sottosequenza comune tra il prefisso s\'' = {s[:task["len_s_prefix"]]} di s  e t = {t}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (una stringa, per esempio "TATATA")\nanswer{num_of_question}=""'
    verif: 'display(Markdown(verifLCS("{s[:task["len_s_prefix"]]}", "{t}", answer{num_of_question}, pt_green={task["ver_points"]}, pt_red={task["tot_points"]}, index_pt={num_of_question - 1})))'

...
