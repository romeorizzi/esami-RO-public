---
name: knapsack
title: Problema dello zaino
description: problema dello zaino in versione classica
tags:
- programmazione dinamica
- sottoproblemi e ricorrenze

modes: ['free','with_checks']

instance:
  CapacityMax: 39
  elementi: ['A','B','C','D','E','F','G','H','I','L','M']
  pesi : [15,16,18,11,13,5,7,3,1,12,10]
  valori : [61,63,65,52,56,29,30,10,11,42,30]

tasks:
- 1:
    tot_points: 10
    ver_points: 1
    task_codename: max-val_CapacityMax
    request: 'Fornire la massima somma dei valori per un sottoinsieme di elementi con somma dei pesi non eccedente $CapacityMax$= {CapacityMax}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (un numero)\nanswer{num_of_question}=-1'
    verif: 'display(Markdown(verif_knapsack(elementi,pesi,valori,CapacityMax,answer{num_of_question}, pt_green=1, pt_red={task["tot_points"]}, index_pt={num_of_question-1}, val_or_sol="val")))'

    BOTH_valore_ottimo_task_1: 183

    AUX__spiegazione_task_1: |
     Definiamo la matrice `max_val_for_genCap` che ha n+1 righe (la riga 1+i è labellata dall'inserimento di un i-esimo item nel set dei candidati tra cui pescare) e CapacityMax+1 colonne (labellate da un badget b con 0<=b<=CapacityMax) dove `max_val_for_genCap`[i,b] = massimo valore si un subset degli items 1 ... i  con somma dei pesi al più b.
     Stampa della matrice `max_val_for_genCap`:
      ╒════╤════════╤═══════╤═══════╤═══════╤═══════╤═══════╤═══════╤═══════╤═══════╤═══════╤═══════╤═══════╕

      │    │   none │   + A │   + B │   + C │   + D │   + E │   + F │   + G │   + H │   + L │   + M │   + I │

      ╞════╪════════╪═══════╪═══════╪═══════╪═══════╪═══════╪═══════╪═══════╪═══════╪═══════╪═══════╪═══════╡

      │  0 │      0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  1 │      0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │    11 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  2 │      0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │    11 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  3 │      0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │    10 │    10 │    10 │    11 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  4 │      0 │     0 │     0 │     0 │     0 │     0 │     0 │     0 │    10 │    10 │    10 │    21 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  5 │      0 │     0 │     0 │     0 │     0 │     0 │    29 │    29 │    29 │    29 │    29 │    29 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  6 │      0 │     0 │     0 │     0 │     0 │     0 │    29 │    29 │    29 │    29 │    29 │    40 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  7 │      0 │     0 │     0 │     0 │     0 │     0 │    29 │    30 │    30 │    30 │    30 │    40 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  8 │      0 │     0 │     0 │     0 │     0 │     0 │    29 │    30 │    39 │    39 │    39 │    41 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │  9 │      0 │     0 │     0 │     0 │     0 │     0 │    29 │    30 │    39 │    39 │    39 │    50 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 10 │      0 │     0 │     0 │     0 │     0 │     0 │    29 │    30 │    40 │    40 │    40 │    50 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 11 │      0 │     0 │     0 │     0 │    52 │    52 │    52 │    52 │    52 │    52 │    52 │    52 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 12 │      0 │     0 │     0 │     0 │    52 │    52 │    52 │    59 │    59 │    59 │    59 │    63 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 13 │      0 │     0 │     0 │     0 │    52 │    56 │    56 │    59 │    59 │    59 │    59 │    70 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 14 │      0 │     0 │     0 │     0 │    52 │    56 │    56 │    59 │    62 │    62 │    62 │    70 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 15 │      0 │    61 │    61 │    61 │    61 │    61 │    61 │    61 │    69 │    69 │    69 │    73 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 16 │      0 │    61 │    63 │    63 │    63 │    63 │    81 │    81 │    81 │    81 │    81 │    81 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 17 │      0 │    61 │    63 │    63 │    63 │    63 │    81 │    81 │    81 │    81 │    81 │    92 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 18 │      0 │    61 │    63 │    65 │    65 │    65 │    85 │    85 │    85 │    85 │    85 │    92 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 19 │      0 │    61 │    63 │    65 │    65 │    65 │    85 │    85 │    91 │    91 │    91 │    96 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 20 │      0 │    61 │    63 │    65 │    65 │    65 │    90 │    90 │    91 │    91 │    91 │   102 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 21 │      0 │    61 │    63 │    65 │    65 │    65 │    92 │    92 │    95 │    95 │    95 │   102 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 22 │      0 │    61 │    63 │    65 │    65 │    65 │    92 │    92 │    95 │    95 │    95 │   106 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 23 │      0 │    61 │    63 │    65 │    65 │    65 │    94 │   111 │   111 │   111 │   111 │   111 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 24 │      0 │    61 │    63 │    65 │    65 │   108 │   108 │   111 │   111 │   111 │   111 │   122 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 25 │      0 │    61 │    63 │    65 │    65 │   108 │   108 │   115 │   115 │   115 │   115 │   122 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 26 │      0 │    61 │    63 │    65 │   113 │   113 │   113 │   115 │   121 │   121 │   121 │   126 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 27 │      0 │    61 │    63 │    65 │   115 │   115 │   115 │   120 │   121 │   121 │   121 │   132 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 28 │      0 │    61 │    63 │    65 │   115 │   117 │   117 │   122 │   125 │   125 │   125 │   132 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 29 │      0 │    61 │    63 │    65 │   117 │   119 │   137 │   137 │   137 │   137 │   137 │   137 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 30 │      0 │    61 │    63 │    65 │   117 │   119 │   137 │   137 │   137 │   137 │   137 │   148 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 31 │      0 │    61 │   124 │   124 │   124 │   124 │   142 │   142 │   142 │   142 │   142 │   148 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 32 │      0 │    61 │   124 │   124 │   124 │   124 │   144 │   144 │   147 │   147 │   147 │   153 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 33 │      0 │    61 │   124 │   126 │   126 │   126 │   146 │   146 │   147 │   147 │   147 │   158 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 34 │      0 │    61 │   124 │   128 │   128 │   128 │   148 │   148 │   152 │   152 │   152 │   158 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 35 │      0 │    61 │   124 │   128 │   128 │   128 │   148 │   148 │   154 │   154 │   154 │   163 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 36 │      0 │    61 │   124 │   128 │   128 │   128 │   153 │   167 │   167 │   167 │   167 │   167 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 37 │      0 │    61 │   124 │   128 │   128 │   128 │   153 │   167 │   167 │   167 │   167 │   178 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 38 │      0 │    61 │   124 │   128 │   128 │   128 │   155 │   172 │   172 │   172 │   172 │   178 │

      ├────┼────────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┼───────┤

      │ 39 │      0 │    61 │   124 │   128 │   128 │   169 │   169 │   174 │   177 │   177 │   177 │   183 │

      ╘════╧════════╧═══════╧═══════╧═══════╧═══════╧═══════╧═══════╧═══════╧═══════╧═══════╧═══════╧═══════╛

- 2:
    tot_points: 10
    ver_points: 1
    task_codename: opt-sol_CapacityMax
    request: 'Tra i sottoinsiemi di oggetti di peso complessivo non eccedente $CapacityMax$= {CapacityMax} fornirne uno in cui sia massima la somma dei valori.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: 'display(Markdown(verif_knapsack(elementi,pesi,valori,CapacityMax,answer{num_of_question}, pt_green=1, pt_red={task["tot_points"]}, index_pt={num_of_question-1}, val_or_sol="sol")))'

    BOTH_soluzione_ottima_task_2: [['I', 1, 11], ['G', 7, 30], ['F', 5, 29], ['D', 11, 52], ['A', 15, 61]]

    AUX__spiegazione_task_2: |
     Le informazioni che mi servono sono contenute nella matrice `max_val_for_genCap`.

- 3:
    tot_points: 10
    ver_points: 1
    task_codename: max-val_CapacityMax_dopo-esclusioni
    edrCapMax: ['I']
    request: 'Fornire la massima somma dei valori per un sottoinsieme di elementi con somma dei pesi non eccedente {CapacityMax} quando non sia consentito di prendere nessuno dei seguenti elementi: {task["edrCapMax"]}</b>.'
    init_answ_cell_msg: '#Inserisci la tua risposta (un numero)\nanswer{num_of_question}=-1'
    verif: 'display(Markdown(verif_knapsack(elementi,pesi,valori,CapacityMax,answer{num_of_question}, pt_green=1, pt_red={task["tot_points"]}, index_pt={num_of_question-1}, val_or_sol="val",edr={task["edrCapMax"]})))'

    BOTH_valore_ottimo_task_3: 177

    AUX__spiegazione_task_3: |
     Avendo avuto l'attenzione di considerare per ultimi quegli elementi che in questo task mi si chiede di non considerare, l'informazione richiesta è `max_val_for_genCap`[i=new_n=10][b=CapacityMax=39].

- 4:
    tot_points: 10
    ver_points: 1
    task_codename: max-val_CapacityGen
    CapacityGen: 33
    request: 'Fornire la massima somma dei valori per un sottoinsieme di elementi con somma dei pesi non eccedente <b>la capacità {task["CapacityGen"]}</b>.'
    init_answ_cell_msg: '#Inserisci la tua risposta (un numero)\nanswer{num_of_question}=-1'
    verif: 'display(Markdown(verif_knapsack(elementi,pesi,valori,{task["CapacityGen"]},answer{num_of_question}, pt_green=1, pt_red={task["tot_points"]}, index_pt={num_of_question-1}, val_or_sol="val")))'

    BOTH_valore_ottimo_task_4: 158

    AUX__spiegazione_task_4: |
     L'informazione richiesta è `max_val_for_genCap`[n=11][b=CapacityGen=33].

...