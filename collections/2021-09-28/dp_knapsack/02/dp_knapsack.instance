---
name: knapsack
title: Problema dello zaino
description: problema dello zaino in versione classica
tags:
- programmazione dinamica
- sottoproblemi e ricorrenze

modes: ['free','with_checks']

instance:
  CapacityMax: 37
  elementi: ['A','B','C','D','E','F','G','H','I','L','M','N']
  pesi:     [ 12, 16, 18, 11, 13,  6,  7,  3,  1, 12, 10,  8]
  valori:   [ 50, 53, 55, 39, 45, 17, 18,  7,  8, 42, 30, 25]

tasks:
- 1:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityMax
    request: 'Tra i sottoinsiemi di oggetti di peso complessivo non eccedente $CapacityMax$= {CapacityMax} fornirne uno in cui sia massima la somma dei valori.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 2:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityGen
    CapacityGen: 36
    request: 'Tra i sottoinsiemi di oggetti di peso complessivo non eccedente <b>la capacità {task["CapacityGen"]}</b> fornirne uno in cui sia massima la somma dei valori.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 3:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityGen
    CapacityGen: 34
    request: 'Tra i sottoinsiemi di oggetti di peso complessivo non eccedente <b>la capacità {task["CapacityGen"]}</b> fornirne uno in cui sia massima la somma dei valori.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 4:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityGen
    CapacityGen: 33
    request: 'Tra i sottoinsiemi di oggetti di peso complessivo non eccedente <b>la capacità {task["CapacityGen"]}</b> fornirne uno in cui sia massima la somma dei valori.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 5:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityMax_dopo-esclusioni
    edrCapMax: ['E']
    request: 'Fornire una soluzione ottima se {CapacityMax} è la capienza dello zaino da non superarsi ma assumendo di non poter prendere nessuno degli elementi in {task["edrCapMax"]}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 6:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityGen_dopo-esclusioni
    CapacityGen: 37
    edrCapGen: ['B','E']
    request: 'Fornire una soluzione ottima se {task["CapacityGen"]} è la capienza dello zaino da non superarsi ma assumendo di non poter prendere nessuno degli elementi in {task["edrCapGen"]}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 7:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityGen_dopo-esclusioni
    CapacityGen: 36
    edrCapGen: ['B','E','D']
    request: 'Fornire una soluzione ottima se {task["CapacityGen"]} è la capienza dello zaino da non superarsi ma assumendo di non poter prendere nessuno degli elementi in {task["edrCapGen"]}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

- 8:
    tot_points: 5
    ver_points: 1
    task_codename: opt-sol_CapacityGen_dopo-esclusioni
    CapacityGen: 35
    edrCapGen: ['B','E','D','I']
    request: 'Fornire una soluzione ottima se {task["CapacityGen"]} è la capienza dello zaino da non superarsi ma assumendo di non poter prendere nessuno degli elementi in {task["edrCapGen"]}.'
    init_answ_cell_msg: '#Inserisci la tua risposta (in forma di lista)\nanswer{num_of_question}=[]'
    verif: PLACEHOLDER_early_standard

...